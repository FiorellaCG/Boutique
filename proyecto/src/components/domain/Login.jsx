import React, { useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import Services from "../../services/Services";

const Login = () => {
  const [correo, setCorreo] = useState("");
  const [contrase√±a, setContrase√±a] = useState("");
  const [mensaje, setMensaje] = useState("");
  const navigate = useNavigate();

  // üîê Cifrar igual que en el registro
  const cifrarPassword = (password) => btoa(password);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setMensaje("");

    const intento = {
      correo,
      fecha: new Date().toLocaleString(),
      exito: false,
    };

    try {
      // üîπ Obtener todos los usuarios
      const usuarios = await Services.getDatos("usuarios");

      // üîπ Buscar usuario con correo y contrase√±a (ambas cifradas)
      const usuario = usuarios.find(
        (u) =>
          u.correo === correo &&
          u.contrase√±a === cifrarPassword(contrase√±a)
      );

      if (usuario) {
        intento.exito = true;
        setMensaje("‚úÖ Inicio de sesi√≥n exitoso.");

        // Guardar intento de login
        await Services.postDatos("intentosLogin", intento);

        // üîπ Guardar sesi√≥n local (opcional)
        localStorage.setItem("usuarioActivo", JSON.stringify(usuario));

        // üîπ Redirigir seg√∫n el rol
        setTimeout(() => {
          if (usuario.rol === "Colaborador") {
            navigate("/admin");
          } else {
            navigate("/home");
          }
        }, 1500);
      } else {
        setMensaje("‚ùå Credenciales incorrectas.");
        await Services.postDatos("intentosLogin", intento);
      }
    } catch (error) {
      setMensaje("‚ùå Error al iniciar sesi√≥n: " + error.message);
    }
  };

  return (
    <div className="container">
      <div className="card">
        <h2>Iniciar Sesi√≥n</h2>
        <form onSubmit={handleSubmit}>
          <label>Correo electr√≥nico</label>
          <input
            type="email"
            value={correo}
            onChange={(e) => setCorreo(e.target.value)}
            required
          />

          <label>Contrase√±a</label>
          <input
            type="password"
            value={contrase√±a}
            onChange={(e) => setContrase√±a(e.target.value)}
            required
          />

          <button type="submit" className="btn">
            Iniciar Sesi√≥n
          </button>
        </form>

        <div className="links">
          <Link to="/recuperar">¬øOlvidaste tu contrase√±a?</Link>
          <Link to="/registro">Crear cuenta nueva</Link>
        </div>

        {mensaje && (
          <div
            className={`alert ${
              mensaje.includes("‚úÖ")
                ? "alert-success"
                : mensaje.includes("‚ùå")
                ? "alert-error"
                : "alert-info"
            }`}
          >
            {mensaje}
          </div>
        )}
      </div>
    </div>
  );
};

export default Login;
